name: Backend CI

on:
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'

jobs:
  lint-and-test:
    name: Lint and test backend
    runs-on: ubuntu-latest
    env:
      DJANGO_SECRET_KEY: test-secret-key
      CELERY_BROKER_URL: redis://localhost:6379/0
      CELERY_RESULT_BACKEND: redis://localhost:6379/1
      SECRETS_PROVIDER: env
      KMS_PROVIDER: aws
      KMS_KEY_ID: local-ci-key
      AWS_REGION: us-east-1
      AIRBYTE_API_URL: http://localhost:8001
      AIRBYTE_API_TOKEN: ci-placeholder
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run Ruff
        run: ruff check backend

      - name: Run pytest with coverage
        run: |
          mkdir -p backend/test-results backend/htmlcov
          pytest backend \
            --junitxml=backend/test-results/junit.xml \
            --cov=backend \
            --cov-report=xml:backend/coverage.xml \
            --cov-report=html:backend/htmlcov

      - name: Generate backend CI summary
        if: ${{ always() }}
        run: |
          python scripts/ci/backend-summary.py \
            --junit backend/test-results/junit.xml \
            --coverage backend/coverage.xml

      - name: Upload backend CI summary
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: backend-ci-summary.json
          path: backend-ci-summary.json

      - name: Upload backend CI metrics
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: ci-metrics.csv
          path: ci-metrics.csv

      - name: Upload backend test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: backend-tests
          path: backend/test-results/junit.xml
          if-no-files-found: warn

      - name: Upload backend coverage reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: |
            backend/coverage.xml
            backend/htmlcov
          if-no-files-found: warn

      - name: Publish coverage summary
        if: ${{ always() }}
        run: |
          python scripts/ci/coverage-summary.py \
            --coverage backend/coverage.xml \
            --junit backend/test-results/junit.xml
